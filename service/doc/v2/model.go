// Code generated by lark suite oapi sdk gen
package v2

import (
	"lost_found/api/core/tools"
)

type Doc struct {
}

type DocBatchUpdateReqBody struct {
	DocToken        string   `json:"docToken,omitempty"`
	Revision        int      `json:"Revision,omitempty"`
	Requests        []string `json:"Requests,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *DocBatchUpdateReqBody) MarshalJSON() ([]byte, error) {
	type cp DocBatchUpdateReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DocContentResult struct {
	Content  string `json:"content,omitempty"`
	Revision int    `json:"revision,omitempty"`
}

type DocCreateReqBody struct {
	FolderToken     string   `json:"FolderToken,omitempty"`
	Content         string   `json:"Content,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *DocCreateReqBody) MarshalJSON() ([]byte, error) {
	type cp DocCreateReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type DocCreateResult struct {
	ObjToken string `json:"objToken,omitempty"`
	Url      string `json:"url,omitempty"`
}

type DocMetaResult struct {
	CreateDate     string `json:"create_date,omitempty"`
	CreateTime     int    `json:"create_time,omitempty"`
	Creator        string `json:"creator,omitempty"`
	CreateUserName string `json:"create_user_name,omitempty"`
	DeleteFlag     int    `json:"delete_flag,omitempty"`
	EditTime       int    `json:"edit_time,omitempty"`
	EditUserName   string `json:"edit_user_name,omitempty"`
	IsExternal     bool   `json:"is_external,omitempty"`
	IsPined        bool   `json:"is_pined,omitempty"`
	IsStared       bool   `json:"is_stared,omitempty"`
	ObjType        string `json:"obj_type,omitempty"`
	Owner          string `json:"owner,omitempty"`
	OwnerUserName  string `json:"owner_user_name,omitempty"`
	ServerTime     int    `json:"server_time,omitempty"`
	TenantId       string `json:"tenant_id,omitempty"`
	Title          string `json:"title,omitempty"`
	Type           int    `json:"type,omitempty"`
	Url            string `json:"url,omitempty"`
}

type DocRawContentResult struct {
	Content string `json:"content,omitempty"`
}
