// Code generated by lark suite oapi sdk gen
package v1

import (
	"lost_found/api/core/tools"
)

type AdminDeptStat struct {
	Date                 string   `json:"date,omitempty"`
	DepartmentId         string   `json:"department_id,omitempty"`
	DepartmentName       string   `json:"department_name,omitempty"`
	DepartmentPath       string   `json:"department_path,omitempty"`
	TotalUserNum         int      `json:"total_user_num,omitempty"`
	ActiveUserNum        int      `json:"active_user_num,omitempty"`
	ActiveUserRate       string   `json:"active_user_rate,omitempty"`
	SuiteDau             int      `json:"suite_dau,omitempty"`
	SuiteActiveRate      string   `json:"suite_active_rate,omitempty"`
	NewUserNum           int      `json:"new_user_num,omitempty"`
	NewActiveNum         int      `json:"new_active_num,omitempty"`
	ResignUserNum        int      `json:"resign_user_num,omitempty"`
	ImDau                int      `json:"im_dau,omitempty"`
	SendMessengerUserNum int      `json:"send_messenger_user_num,omitempty"`
	SendMessengerNum     int      `json:"send_messenger_num,omitempty"`
	AvgSendMessengerNum  string   `json:"avg_send_messenger_num,omitempty"`
	DocsDau              int      `json:"docs_dau,omitempty"`
	CreateDocsUserNum    int      `json:"create_docs_user_num,omitempty"`
	CreateDocsNum        int      `json:"create_docs_num,omitempty"`
	AvgCreateDocsNum     string   `json:"avg_create_docs_num,omitempty"`
	CalDau               int      `json:"cal_dau,omitempty"`
	CreateCalUserNum     int      `json:"create_cal_user_num,omitempty"`
	CreateCalNum         int      `json:"create_cal_num,omitempty"`
	AvgCreateCalNum      string   `json:"avg_create_cal_num,omitempty"`
	VcDau                int      `json:"vc_dau,omitempty"`
	VcDuration           int      `json:"vc_duration,omitempty"`
	AvgVcDuration        string   `json:"avg_vc_duration,omitempty"`
	ForceSendFields      []string `json:"-"`
}

func (s *AdminDeptStat) MarshalJSON() ([]byte, error) {
	type cp AdminDeptStat
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AdminUserStat struct {
	Date             string   `json:"date,omitempty"`
	UserId           string   `json:"user_id,omitempty"`
	UserName         string   `json:"user_name,omitempty"`
	DepartmentName   string   `json:"department_name,omitempty"`
	DepartmentPath   string   `json:"department_path,omitempty"`
	CreateTime       string   `json:"create_time,omitempty"`
	UserActiveFlag   int      `json:"user_active_flag,omitempty"`
	RegisterTime     string   `json:"register_time,omitempty"`
	SuiteActiveFlag  int      `json:"suite_active_flag,omitempty"`
	LastActiveTime   string   `json:"last_active_time,omitempty"`
	ImActiveFlag     int      `json:"im_active_flag,omitempty"`
	SendMessengerNum int      `json:"send_messenger_num,omitempty"`
	DocsActiveFlag   int      `json:"docs_active_flag,omitempty"`
	CreateDocsNum    int      `json:"create_docs_num,omitempty"`
	CalActiveFlag    int      `json:"cal_active_flag,omitempty"`
	CreateCalNum     int      `json:"create_cal_num,omitempty"`
	VcActiveFlag     int      `json:"vc_active_flag,omitempty"`
	VcDuration       int      `json:"vc_duration,omitempty"`
	ActiveOs         string   `json:"active_os,omitempty"`
	ForceSendFields  []string `json:"-"`
}

func (s *AdminUserStat) MarshalJSON() ([]byte, error) {
	type cp AdminUserStat
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AuditAndroidContext struct {
	Udid            string   `json:"udid,omitempty"`
	Did             string   `json:"did,omitempty"`
	AppVer          string   `json:"app_ver,omitempty"`
	Ver             string   `json:"ver,omitempty"`
	Region          string   `json:"region,omitempty"`
	IdI             string   `json:"id_i,omitempty"`
	IdR             string   `json:"id_r,omitempty"`
	HwBrand         string   `json:"hw_brand,omitempty"`
	HwManuf         string   `json:"hw_manuf,omitempty"`
	Wifip           string   `json:"wifip,omitempty"`
	RouteIip        string   `json:"route_iip,omitempty"`
	RouteGip        string   `json:"route_gip,omitempty"`
	EnvSu           string   `json:"env_su,omitempty"`
	EnvTz           string   `json:"env_tz,omitempty"`
	EnvMl           string   `json:"env_ml,omitempty"`
	Location        string   `json:"location,omitempty"`
	ActiveIp        string   `json:"active_ip,omitempty"`
	ActiveIpDetail  string   `json:"active_ip_detail,omitempty"`
	CellBaseStation string   `json:"cell_base_station,omitempty"`
	IP              string   `json:"IP,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AuditAndroidContext) MarshalJSON() ([]byte, error) {
	type cp AuditAndroidContext
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AuditContext struct {
	TerminalType    int                  `json:"terminal_type,omitempty"`
	IosContext      *AuditIosContext     `json:"ios_context,omitempty"`
	PcContext       *AuditPcContext      `json:"pc_context,omitempty"`
	WebContext      *AuditWebContext     `json:"web_context,omitempty"`
	AndroidContext  *AuditAndroidContext `json:"android_context,omitempty"`
	ForceSendFields []string             `json:"-"`
}

func (s *AuditContext) MarshalJSON() ([]byte, error) {
	type cp AuditContext
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AuditEventExtend struct {
	CommentType                 string   `json:"comment_type,omitempty"`
	AppDetail                   string   `json:"app_detail,omitempty"`
	TwoStepValidation           bool     `json:"two_step_validation,omitempty"`
	LoginMethod                 string   `json:"login_method,omitempty"`
	NewPeopleNumInVideo         int      `json:"new_people_num_in_video,omitempty"`
	ExternalPeopleNumInVideo    int      `json:"external_people_num_in_video,omitempty"`
	ExternalPeopleNumInChat     int      `json:"external_people_num_in_chat,omitempty"`
	JoinGroup                   int      `json:"join_group,omitempty"`
	QuitGroup                   int      `json:"quit_group,omitempty"`
	ExternalPeopleNumInDocShare int      `json:"external_people_num_in_doc_share,omitempty"`
	ForceSendFields             []string `json:"-"`
}

func (s *AuditEventExtend) MarshalJSON() ([]byte, error) {
	type cp AuditEventExtend
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AuditInfo struct {
	EventId         string                  `json:"event_id,omitempty"`
	EventName       string                  `json:"event_name,omitempty"`
	DepartmentIds   []string                `json:"department_ids,omitempty"`
	EventModule     int                     `json:"event_module,omitempty"`
	OperatorType    int                     `json:"operator_type,omitempty"`
	OperatorValue   string                  `json:"operator_value,omitempty"`
	Objects         []*AuditObjectEntity    `json:"objects,omitempty"`
	Recipients      []*AuditRecipientEntity `json:"recipients,omitempty"`
	EventTime       int                     `json:"event_time,omitempty"`
	Ip              string                  `json:"ip,omitempty"`
	OperatorApp     string                  `json:"operator_app,omitempty"`
	AuditContext    *AuditContext           `json:"audit_context,omitempty"`
	Extend          *AuditEventExtend       `json:"extend,omitempty"`
	OperatorAppName string                  `json:"operator_app_name,omitempty"`
	ForceSendFields []string                `json:"-"`
}

func (s *AuditInfo) MarshalJSON() ([]byte, error) {
	type cp AuditInfo
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AuditIosContext struct {
	Udid            string   `json:"udid,omitempty"`
	Did             string   `json:"did,omitempty"`
	AppVer          string   `json:"app_ver,omitempty"`
	Ver             string   `json:"ver,omitempty"`
	Os              string   `json:"os,omitempty"`
	STZone          string   `json:"STZone,omitempty"`
	ML              string   `json:"ML,omitempty"`
	Sjd             string   `json:"sjd,omitempty"`
	Proxyip         string   `json:"proxyip,omitempty"`
	Wifip           string   `json:"wifip,omitempty"`
	Location        string   `json:"location,omitempty"`
	ActiveIp        string   `json:"active_ip,omitempty"`
	ActiveIpDetail  string   `json:"active_ip_detail,omitempty"`
	CellBaseStation string   `json:"cell_base_station,omitempty"`
	IP              string   `json:"IP,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AuditIosContext) MarshalJSON() ([]byte, error) {
	type cp AuditIosContext
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AuditObjectDetail struct {
	CloneSource                  string   `json:"clone_source,omitempty"`
	TextDetail                   string   `json:"text_detail,omitempty"`
	FileName                     string   `json:"file_name,omitempty"`
	ThirdPartyAppID              string   `json:"third_party_appID,omitempty"`
	ContainFileNum               int      `json:"contain_file_num,omitempty"`
	PermissionSettingType        string   `json:"permission_setting_type,omitempty"`
	PermissionExternalAccessType bool     `json:"permission_external_access_Type,omitempty"`
	PermissionShareType          string   `json:"permission_share_type,omitempty"`
	FileServiceSource            string   `json:"file_service_source,omitempty"`
	OkrDownloadContent           string   `json:"okr_download_content,omitempty"`
	ForceSendFields              []string `json:"-"`
}

func (s *AuditObjectDetail) MarshalJSON() ([]byte, error) {
	type cp AuditObjectDetail
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AuditObjectEntity struct {
	ObjectType      string             `json:"object_type,omitempty"`
	ObjectValue     string             `json:"object_value,omitempty"`
	ObjectName      string             `json:"object_name,omitempty"`
	ObjectOwner     string             `json:"object_owner,omitempty"`
	ObjectDetail    *AuditObjectDetail `json:"object_detail,omitempty"`
	ForceSendFields []string           `json:"-"`
}

func (s *AuditObjectEntity) MarshalJSON() ([]byte, error) {
	type cp AuditObjectEntity
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AuditPcContext struct {
	Udid            string   `json:"udid,omitempty"`
	Did             string   `json:"did,omitempty"`
	AppVer          string   `json:"app_ver,omitempty"`
	Ver             string   `json:"ver,omitempty"`
	Os              string   `json:"os,omitempty"`
	Wifip           string   `json:"wifip,omitempty"`
	Region          string   `json:"region,omitempty"`
	IP              string   `json:"IP,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AuditPcContext) MarshalJSON() ([]byte, error) {
	type cp AuditPcContext
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AuditRecipientDetail struct {
	PermissionActionType string   `json:"permission_action_type,omitempty"`
	ForceSendFields      []string `json:"-"`
}

func (s *AuditRecipientDetail) MarshalJSON() ([]byte, error) {
	type cp AuditRecipientDetail
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AuditRecipientEntity struct {
	RecipientType   string                `json:"recipient_type,omitempty"`
	RecipientValue  string                `json:"recipient_value,omitempty"`
	RecipientDetail *AuditRecipientDetail `json:"recipient_detail,omitempty"`
	ForceSendFields []string              `json:"-"`
}

func (s *AuditRecipientEntity) MarshalJSON() ([]byte, error) {
	type cp AuditRecipientEntity
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AuditWebContext struct {
	UserAgent       string   `json:"user_agent,omitempty"`
	IP              string   `json:"IP,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AuditWebContext) MarshalJSON() ([]byte, error) {
	type cp AuditWebContext
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type SplashPageStat struct {
	Date                      string   `json:"date,omitempty"`
	SplashId                  string   `json:"splash_id,omitempty"`
	ImpressionCount           int      `json:"impression_count,omitempty"`
	ClickCount                int      `json:"click_count,omitempty"`
	SkipCount                 int      `json:"skip_count,omitempty"`
	ImpressionCountAccumulate int      `json:"impression_count_accumulate,omitempty"`
	ClickCountAccumulate      int      `json:"click_count_accumulate,omitempty"`
	SkipCountAccumulate       int      `json:"skip_count_accumulate,omitempty"`
	ForceSendFields           []string `json:"-"`
}

func (s *SplashPageStat) MarshalJSON() ([]byte, error) {
	type cp SplashPageStat
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AdminDeptStatListResult struct {
	HasMore   bool             `json:"has_more,omitempty"`
	PageToken string           `json:"page_token,omitempty"`
	Items     []*AdminDeptStat `json:"items,omitempty"`
}

type AdminUserStatListResult struct {
	HasMore   bool             `json:"has_more,omitempty"`
	PageToken string           `json:"page_token,omitempty"`
	Items     []*AdminUserStat `json:"items,omitempty"`
}
