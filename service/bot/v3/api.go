// Code generated by lark suite oapi sdk gen
package v3

import (
	"lost_found/api"
	"lost_found/api/core/request"
	"lost_found/core"
	"lost_found/core/config"
)

type Service struct {
	conf *config.Config
	Bots *BotService
}

func NewService(conf *config.Config) *Service {
	s := &Service{
		conf: conf,
	}
	s.Bots = newBotService(s)
	return s
}

type BotService struct {
	service *Service
}

func newBotService(service *Service) *BotService {
	return &BotService{
		service: service,
	}
}

type BotGetReqCall struct {
	ctx    *core.Context
	bots   *BotService
	optFns []request.OptFn
}

func (rc *BotGetReqCall) Do() (*BotGetResult, error) {
	var result = &BotGetResult{}
	rc.optFns = append(rc.optFns, request.SetNotDataField())
	req := request.NewRequest("bot/v3/info", "GET",
		[]request.AccessTokenType{request.AccessTokenTypeTenant}, nil, result, rc.optFns...)
	err := api.Send(rc.ctx, rc.bots.service.conf, req)
	return result, err
}

func (bots *BotService) Get(ctx *core.Context, optFns ...request.OptFn) *BotGetReqCall {
	return &BotGetReqCall{
		ctx:    ctx,
		bots:   bots,
		optFns: optFns,
	}
}
