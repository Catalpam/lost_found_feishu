// Code generated by lark suite oapi sdk gen
package v1

import (
	"lost_found/api/core/tools"
)

type DeleteRecord struct {
	Deleted         bool     `json:"deleted,omitempty"`
	RecordId        string   `json:"record_id,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *DeleteRecord) MarshalJSON() ([]byte, error) {
	type cp DeleteRecord
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Person struct {
	Id              string   `json:"id,omitempty"`
	Name            string   `json:"name,omitempty"`
	EnName          string   `json:"en_name,omitempty"`
	Email           string   `json:"email,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Person) MarshalJSON() ([]byte, error) {
	type cp Person
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type App struct {
	AppToken        string   `json:"app_token,omitempty"`
	Revision        int      `json:"revision,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *App) MarshalJSON() ([]byte, error) {
	type cp App
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTable struct {
	TableId         string   `json:"table_id,omitempty"`
	Revision        int      `json:"revision,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppTable) MarshalJSON() ([]byte, error) {
	type cp AppTable
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableField struct {
	FieldId         string      `json:"field_id,omitempty"`
	FieldName       string      `json:"field_name,omitempty"`
	Type            int         `json:"type,omitempty"`
	Property        interface{} `json:"property,omitempty"`
	ForceSendFields []string    `json:"-"`
}

func (s *AppTableField) MarshalJSON() ([]byte, error) {
	type cp AppTableField
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableRecord struct {
	RecordId        string                 `json:"record_id,omitempty"`
	Fields          map[string]interface{} `json:"fields,omitempty"`
	ForceSendFields []string               `json:"-"`
}

func (s *AppTableRecord) MarshalJSON() ([]byte, error) {
	type cp AppTableRecord
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Option struct {
	Name            string   `json:"name,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Option) MarshalJSON() ([]byte, error) {
	type cp Option
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableRecordBatchDeleteReqBody struct {
	Records         []string `json:"records,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *AppTableRecordBatchDeleteReqBody) MarshalJSON() ([]byte, error) {
	type cp AppTableRecordBatchDeleteReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableRecordBatchDeleteResult struct {
	Records []*DeleteRecord `json:"records,omitempty"`
}

type AppTableRecordBatchCreateReqBody struct {
	Records         []*AppTableRecord `json:"records,omitempty"`
	ForceSendFields []string          `json:"-"`
}

func (s *AppTableRecordBatchCreateReqBody) MarshalJSON() ([]byte, error) {
	type cp AppTableRecordBatchCreateReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableRecordBatchCreateResult struct {
	Records []*AppTableRecord `json:"records,omitempty"`
}

type AppTableRecordGetResult struct {
	Record *AppTableRecord `json:"record,omitempty"`
}

type AppTableRecordUpdateResult struct {
	Record *AppTableRecord `json:"record,omitempty"`
}

type AppTableRecordListResult struct {
	HasMore   bool              `json:"has_more,omitempty"`
	PageToken string            `json:"page_token,omitempty"`
	Items     []*AppTableRecord `json:"items,omitempty"`
}

type AppTableRecordBatchUpdateReqBody struct {
	Records         []*AppTableRecord `json:"records,omitempty"`
	ForceSendFields []string          `json:"-"`
}

func (s *AppTableRecordBatchUpdateReqBody) MarshalJSON() ([]byte, error) {
	type cp AppTableRecordBatchUpdateReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type AppTableRecordBatchUpdateResult struct {
	Records []*AppTableRecord `json:"records,omitempty"`
}

type AppTableRecordCreateResult struct {
	Record *AppTableRecord `json:"record,omitempty"`
}

type AppGetResult struct {
	App *App `json:"app,omitempty"`
}

type AppTableListResult struct {
	HasMore   bool        `json:"has_more,omitempty"`
	PageToken string      `json:"page_token,omitempty"`
	Items     []*AppTable `json:"items,omitempty"`
}

type AppTableFieldListResult struct {
	HasMore   bool             `json:"has_more,omitempty"`
	PageToken string           `json:"page_token,omitempty"`
	Items     []*AppTableField `json:"items,omitempty"`
}
